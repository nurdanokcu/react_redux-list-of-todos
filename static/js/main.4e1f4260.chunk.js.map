{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["actions","todo","type","payload","currentTodoReducer","state","action","query","status","initialState","filterReducer","todos","todosReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoList","dispatch","filteredTodos","todosToFilter","trimmedQuery","toLowerCase","trim","title","includes","completed","preparedTodos","length","className","map","id","cn","onClick","selectTodo","TodoFilter","useState","setQuery","setFilterStatus","setFilterQuery","applyDebounce","debounce","value","onSubmit","event","preventDefault","onChange","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","userId","Loader","TodoModal","user","setUser","isLoading","setLoading","didload","setLoaded","hasError","setError","useEffect","loadUser","a","userFromServer","showTodoInfo","closeModal","href","email","name","App","isLoadingFailed","setLoadingFailed","loadTodos","todosFromServer","areTodosReady","showModal","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4e1f4260.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\n// we use string literal as a type to avoid mistype in future\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\n// payload is a typical name for an action data\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\n// Action creator return type protect us from a mistype\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\n// These actions will be used in the application\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n    case 'currentTodo/REMOVE':\n      return null;\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\ntype FilterQueryAction = {\n  type: 'query/SET',\n  payload: string\n};\n\ntype FilterStatusAction = {\n  type: 'status/SET',\n  payload: Status\n};\n\nconst setFilterQuery = (query: string):FilterQueryAction => ({\n  type: 'query/SET',\n  payload: query,\n});\n\nconst setFilterStatus = (status: Status):FilterStatusAction => ({\n  type: 'status/SET',\n  payload: status,\n});\n\nexport const actions = { setFilterQuery, setFilterStatus };\n\ntype State = { query: string, status: Status };\ntype Action = FilterQueryAction | FilterStatusAction;\n\nconst initialState:State = { query: '', status: 'all' };\n\nconst filterReducer = (\n  state: State = initialState,\n  action: Action,\n) => {\n  switch (action.type) {\n    case 'query/SET':\n      return {\n        ...state,\n        query: action.payload,\n      };\n    case 'status/SET':\n      return {\n        ...state,\n        status: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype SetTodosAction = {\n  type: 'todos/SET';\n  payload: Todo[];\n};\n\nconst setTodos = (todos: Todo[]): SetTodosAction => ({\n  type: 'todos/SET',\n  payload: todos,\n});\n\nexport const actions = { setTodos };\n\nconst initialState: Todo[] = [];\n\ntype State = Todo[];\ntype Action = SetTodosAction;\n\nconst todosReducer = (\n  state: State = initialState,\n  action: Action,\n): Todo[] => {\n  switch (action.type) {\n    case 'todos/SET':\n      return [...state, ...action.payload];\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import cn from 'classnames';\n\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/currentTodo';\nimport { Todo } from '../../types/Todo';\n\nexport const TodoList: React.FC = () => {\n  const todos = useAppSelector(state => state.todos);\n  const query = useAppSelector(state => state.filter.query);\n  const status = useAppSelector(state => state.filter.status);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const dispatch = useAppDispatch();\n\n  const preparedTodos = (todosToFilter: Todo[]) => {\n    let filteredTodos = [...todosToFilter];\n    const trimmedQuery = query.toLowerCase().trim();\n\n    if (query) {\n      filteredTodos = filteredTodos.filter(\n        todo => todo.title.toLowerCase().includes(trimmedQuery),\n      );\n    }\n\n    filteredTodos = filteredTodos.filter(({ completed }) => {\n      switch (status) {\n        case 'active':\n          return !completed;\n        case 'completed':\n          return completed;\n        default:\n          return true;\n      }\n    });\n\n    return filteredTodos;\n  };\n\n  const filteredTodos = preparedTodos(todos);\n\n  const selectTodo = (todo: Todo) => {\n    dispatch(actions.setTodo(todo));\n  };\n\n  return (\n    <>\n      {filteredTodos.length ? (\n        <table className=\"table is-narrow is-fullwidth\">\n          <thead>\n            <tr>\n              <th>#</th>\n\n              <th>\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </th>\n\n              <th>Title</th>\n              <th> </th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {filteredTodos.map(todo => {\n              const { id, completed, title } = todo;\n\n              return (\n                <tr\n                  data-cy=\"todo\"\n                  key={id}\n                >\n                  <td className=\"is-vcentered\">{id}</td>\n                  <td className=\"is-vcentered\">\n                    {completed && (\n                      <span className=\"icon\" data-cy=\"iconCompleted\">\n                        <i className=\"fas fa-check\" />\n                      </span>\n                    )}\n                  </td>\n\n                  <td className=\"is-vcentered is-expanded\">\n                    <p className={cn('has-text-success', {\n                      'has-text-danger': !completed,\n                    })}\n                    >\n                      {title}\n                    </p>\n                  </td>\n\n                  <td className=\"has-text-right is-vcentered\">\n                    <button\n                      data-cy=\"selectButton\"\n                      className=\"button\"\n                      type=\"button\"\n                      onClick={() => selectTodo(todo)}\n                    >\n                      <span className=\"icon\">\n                        <i className={cn('far', {\n                          'fa-eye': id !== currentTodo?.id,\n                          'fa-eye-slash': id === currentTodo?.id,\n                        })}\n                        />\n                      </span>\n                    </button>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      ) : (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      )}\n\n    </>\n  );\n};\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, { useState } from 'react';\nimport debounce from 'lodash/debounce';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/filter';\nimport { Status } from '../../types/Status';\n\nexport const TodoFilter: React.FC = () => {\n  const [query, setQuery] = useState('');\n  const dispatch = useAppDispatch();\n  const status = useAppSelector(state => state.filter.status);\n  const { setFilterStatus, setFilterQuery } = actions;\n\n  const applyDebounce = debounce((value: string) => {\n    dispatch(setFilterQuery(value));\n  }, 500);\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    applyDebounce(event.target.value);\n    setQuery(event.target.value);\n  };\n\n  const handleSelectClick = (\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    dispatch(setFilterStatus(event.target.value as Status));\n  };\n\n  const clearQuery = () => {\n    dispatch(setFilterQuery(''));\n    setQuery('');\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={handleSelectClick}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleQueryChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={clearQuery}\n            />\n          </span>\n        )}\n\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/currentTodo';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\nexport const TodoModal: React.FC = () => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setLoading] = useState(false);\n  const [didload, setLoaded] = useState(false);\n  const [hasError, setError] = useState(false);\n  const dispatch = useAppDispatch();\n  const {\n    userId,\n    completed,\n    id,\n    title,\n  } = useAppSelector(state => state.currentTodo) as Todo;\n\n  useEffect(() => {\n    const loadUser = async () => {\n      setLoading(true);\n      try {\n        const userFromServer = await getUser(userId);\n\n        setUser(userFromServer);\n        setLoaded(true);\n      } catch (err) {\n        setError(true);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadUser();\n  }, [id]);\n\n  const showTodoInfo = !isLoading && !hasError && didload;\n\n  const closeModal = () => {\n    dispatch(actions.removeTodo());\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading && <Loader />}\n\n      {showTodoInfo && (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={closeModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p\n              className=\"block\"\n              data-cy=\"modal-title\"\n            >\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed\n                ? (\n                  <strong className=\"has-text-success\">Done</strong>\n                ) : (\n                  <strong className=\"has-text-danger\">Planned</strong>)}\n              {' by '}\n              <a\n                href={`mailto:${user?.email}`}\n              >\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n\n      {hasError && (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={closeModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p\n              className=\"block has-text-danger\"\n            >\n              User is not found!\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { getTodos } from './api';\nimport { actions } from './features/todos';\n\nexport const App: React.FC = () => {\n  const [isLoadingFailed, setLoadingFailed] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n\n  const dispatch = useAppDispatch();\n\n  const loadTodos = async () => {\n    setLoading(true);\n    try {\n      const todosFromServer = await getTodos();\n\n      dispatch(actions.setTodos(todosFromServer));\n    } catch {\n      setLoadingFailed(true);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadTodos();\n  }, []);\n\n  const areTodosReady = !isLoading && !isLoadingFailed;\n  const showModal = currentTodo;\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && (\n                <Loader />\n              )}\n\n              {isLoadingFailed && (\n                <p>No todos were loaded!</p>\n              )}\n\n              {areTodosReady && (\n                <TodoList />\n              )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {showModal && <TodoModal /> }\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}